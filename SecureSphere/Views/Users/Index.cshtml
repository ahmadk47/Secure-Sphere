@model IEnumerable<SecureSphere.Models.ApplicationUser>

@{
    ViewData["Title"] = "Index";
}
<!DOCTYPE html>

        <h1>Users</h1>
    <li>
        <button class="btn navbar-text text-capitalize fs-6 fw-bold" type="button" data-bs-toggle="collapse" data-bs-target="#camsCollapse" aria-expanded="false" style="color:#90AFC5">
            Cameras
        </button>
        <ul class="collapse" id="camsCollapse" style="background-color : #FDF6F6;color:#90AFC5 ">
            <li><a class="nav-link navbar-text text-capitalize fs-6 fw-bold" asp-area="" asp-controller="Cameras" asp-action="index" style="color:#90AFC5">Show Cameras</a></li>
            <li><a class="nav-link navbar-text text-capitalize fs-6 fw-bold" asp-area="" asp-controller="Cameras" asp-action="create" style="color:#90AFC5">Add Cameras</a></li>
        </ul>
    </li>
<form asp-controller="Users" asp-action="Index" id="searchForm">
    @*     <p>
    Search <input class="search-bar" type="text" name="SearchString" id="searchInput" value="@ViewBag.SearchString" placeholder="Enter Client Name" />
    </p> *@
    <div class="input-group w-50">
        <input type="search" class="form-control rounded" name="SearchString" id="searchInput" value="@ViewBag.SearchString" placeholder="Enter Client Name" aria-label="Search" aria-describedby="search-addon" />

    </div>
</form>
<table class="table table-light w-75 table-bordered table-hover table-sm table-responsive">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.UserName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PasswordHash)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.CreatedAt)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Branch.Client)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Branch)
                    </th>

                    <th>
                        Properties
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                        @Html.DisplayFor(modelItem => item.PasswordHash)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedAt)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Branch.Client.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Branch.Address)
                        </td>
                <td class="btn-group-sm">
                    <a class="btn btn-outline-secondary btn-sm active navbar-text text-capitalize fs-6 fw-bold" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a class="btn btn-outline-secondary btn-sm active navbar-text text-capitalize fs-6 fw-bold" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a class="btn btn-outline-secondary btn-sm active navbar-text text-capitalize fs-6 fw-bold" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
@section Scripts {
    <script>
        $(document).ready(function() {
            var delay = (function(){
                var timer = 0;
                return function(callback, ms){
                    clearTimeout (timer);
                    timer = setTimeout(callback, ms);
                };
            })();

            $('#searchInput').on('input', function() {
                var searchString = $(this).val();
                delay(function() {
                    $.ajax({
                        url: '@Url.Action("Index", "Users")',
                        data: { SearchString: searchString },
                        success: function(result) {
                            $('#searchResults').html($(result).find('#searchResults').html());
                        }
                    });
                }, 300); // Wait for 300ms after the user stops typing
            });
        });
    </script>
}